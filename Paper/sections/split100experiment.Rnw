% !Rnw root = ../leglossa.Rnw
<<setupsplit, cache=FALSE, include=FALSE, results='asis'>>=
opts_knit$set(self.contained=FALSE)
@

\section{Split-100 experiment}
\label{sec:split100experiment}

\subsection{Design, choice of stimuli, and participants}
\label{sub:designchoiceofstimuliandparticipants}

The experiment was designed to examine how strongly native speakers of German prefer a pluralic link in the two conditions (internal or external plural).
A split-100 task was chosen because it is claimed that it allows participants to make subtler judgements compared to a binary forced-choice task (\citealt{FordBresnan2013}, \citealt{VerhoevenTemme2017}).
In a split-100 task, subjects are offered two options (in the case at hand a compound with PL or NPL) and they can weigh their preference for either of them, assigning values between $100;0$ (clear preference for option one) and $0;100$ (clear preference for option two) to the tuple of options.

The experiment was conducted using PsychoPy \parencite{Peirce2007} and contained two sub-experiments merged into one run for each subject.
Subjects made eight decisions pertaining to the internal plural sub-experiment and eight decisions pertaining to the external plural sub-experiment.
In addition to these 16 targets, there were 41 fillers, which results in a target-to-filler ratio of 1:2.5.
Since the split-100 task is usually comparatively easy for subjects, there was a training phase with only five example decisions with additional on-screen hints.
Subjects were presented with artificial sentences containing a blank where the compound should go.
The two variants (with PL and NPL) were presented on the same screen below the sentence with a slider in between which could be moved freely to assign a preference between $100;0$ and $0;100$.
The corresponding numbers were displayed dynamically as subjects moved the slider.
When they were satisfied with their decision, subjects pressed a button to store it.
After each sentence, subjects answered a simple distractor question by pressing any fo the digits 1--9.
The questions were not related to the sentences and were simple arithmetic or counting exercises.
Finally, it should be noted that the order of the stimuli and fillers was randomised for each participant.

The choice of stimuli was guided by the exploratory data analysis described in Section~\ref{sec:data}.
First of all, we chose N1s which have roughly equal productivity with PL and NPL.
We then tried to find for each N1 some semantically appropriate N2s which clearly trigger internal plural semantics and ones which clearly do not.
Finally, we checked the frequencies of the N1+N2 combinations with PL and NPL in the corpus because we wanted to use compounds as stimuli which were productively formed for the subjects inasmuch as they had never used or heard\slash read them before (at least with a high probability).
The process turned out to be a cyclic one because compounds meeting the desired criteria were difficult to find.
Table~\ref{tab:stimuli} shows the results of the selection process.

<<results='asis'>>=
exp.ppots <- as.data.frame(
  matrix(
    unlist(
      apply(stims.freqs, 1, function(r) {get.ppot(r[["N1"]], analyses.full, r[["LE"]])})
      ), nrow = 16, byrow = T
    )
  )
stims.freqs <- cbind(stims.freqs, exp.ppots)
colnames(stims.freqs)[c(11,12)] <- c("Pp-PL", "Pp-NPL")

stims.freqs$LE        <- le.name(as.character(stims.freqs$LE))
stims.freqs$FbandNPL  <- nice.int(frequency.band(stims.freqs$FtokenNPL))
stims.freqs$FbandPL   <- nice.int(frequency.band(stims.freqs$FtokenPL))
stims.freqs$AbsFDiff  <- nice.int(stims.freqs$FtokenPL-stims.freqs$FtokenNPL)
stims.freqs$Condition <- c(rep("Int", 8), rep("Ext", 8))

stims.freqs$FbandNPL <- ifelse(stims.freqs$FbandNPL == "NA", "--", stims.freqs$FbandNPL)
stims.freqs$FbandPL <- ifelse(stims.freqs$FbandPL == "NA", "--", stims.freqs$FbandPL)

stims.tab <- stims.freqs[, c("N1", "LE", "N2", "Pp-PL", "Pp-NPL", "FbandPL", "FbandNPL", "AbsFDiff", "Gloss")]
stims.tab[, c("Pp-PL")] <- nice.float(stims.tab[, c("Pp-PL")])
stims.tab[, c("Pp-NPL")] <- nice.float(stims.tab[, c("Pp-NPL")])
colnames(stims.tab)[c(6,7,8)] <- c("c-PL", "c-NPL", "Delta-f")
stims.xt <- xtable(stims.tab,
             caption = "Selection of stimuli for split-100 experiment; Pp-PL and Pp-NPL are the potential productivities of the N1 with PL and NPL, respectively; c-PL and c-NPL are the frequency bands of the compound with PL and NPL, respectively; Delta-f is the difference in raw token frequency between the compound with PL and NPL",
             label = "tab:stimuli")
align(stims.xt) <- c("r", rep("l", 3), rep("r", 5), "l")
print(stims.xt,
      include.rownames=F,
      floating = T,
      booktabs = T,
      #rotate.colnames = T,
      floating.environment = "sidewaystable",
      hline.after = c(-1,0,8,16)
      )
@

The top eight compounds shown in the table were used as stimuli for the internal plural condition.
The N2s \textit{Kooperation} `cooperation', \textit{Zusammenlegung} `merger\slash unification', \textit{BÃ¼ndel} `bundle', and \textit{Sammlung} `collection' are clear triggers of internal plural.
On the other hand, \textit{Eingang} `entry', \textit{Beschriftung} `label(ling)', \textit{Schliff} `cut\slash sharpening', and \textit{Abdruck} `mark\slash impression (physical)' cannot trigger internal plural semantics at all.
In order to control for item-specific effects related to concrete N2s, we

\subsection{Results}
\label{sub:results-split100}

<<conditions, fig.pos="htb!", fig.height=4, fig.cap="Distribution of Split-100 responses by conditions">>=
par(mfrow=c(1,2))
vioplot(obs.coll[which(obs.coll$cond == "Collective"),]$realRating,
        obs.coll[which(obs.coll$cond == "Individual"),]$realRating,
     col = "gold",
     names = c("Pl.-ind.", "Not pl.-ind.")
     )
vioplot(obs.pl[which(obs.pl$cond == "Singular"),]$realRating,
        obs.pl[which(obs.pl$cond == "Plural"),]$realRating,
     col = "gold",
     names = c("Singular", "Plural")
     )
par(mfrow=c(1,1))
# title("Distribution of split-100 ratings")
@

<<participants, fig.pos="htb!", fig.height=6, fig.cap="Distribution of individual Split-100 responses by conditions", fig.show='hide', message=FALSE, warning=FALSE, results='hide', error=FALSE>>=
par(mfrow=c(2,1))
plot(obs.coll$realRating~obs.coll$participant,
     las = 2, col = "gold",
     main = "Collective N2: distribution of responses",
     xlab = "Participant ID", ylab = "Split-100 responses",
     frame = F)
plot(obs.pl$realRating~obs.pl$participant,
     las = 2, col = "gold",
     main = "Plural N2: distribution of responses",
     xlab = "Participant ID", ylab = "Split-100 responses",
     frame = F)

#
# Violin plot version. Unreadable.
#
# resp.parts <- lapply(levels(obs.coll$participant),
#                      function(p) {obs.coll[which(obs.coll$participant==p), "realRating"]}
#                      )
# do.call(vioplot, c(unname(resp.parts), col='white', colMed = "darkred"))
# resp.parts <- lapply(levels(obs.pl$participant),
#                      function(p) {obs.pl[which(obs.pl$participant==p), "realRating"]}
#                      )
# do.call(vioplot, c(unname(resp.parts), col='white', colMed = "darkred"))

par(mfrow=c(1,1))
@

<<betainfl, message=FALSE, warning=FALSE, results='hide', error=FALSE>>=
model.coll   <- gamlss(realRatingProp ~ cond + random(participant), data = obs.coll, family=BEINF)
model.coll.0 <- gamlss(realRatingProp ~        random(participant), data = obs.coll, family=BEINF)
@




